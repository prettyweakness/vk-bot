import sqlite3
from tasks_database import TASKS

def import_tasks_to_db():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏–∑ tasks_database.py –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('bot_db.sqlite')
    cursor = conn.cursor()
    
    added_count = 0
    skipped_count = 0
    
    for difficulty, tasks in TASKS.items():
        for task_text in tasks:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                cursor.execute(
                    "SELECT id FROM tasks WHERE task_text = ? AND difficulty = ?",
                    (task_text, difficulty)
                )
                if cursor.fetchone() is None:
                    exp_reward = 10 if difficulty == 'easy' else 20 if difficulty == 'medium' else 30
                    cursor.execute(
                        "INSERT INTO tasks (task_text, difficulty, experience_reward) VALUES (?, ?, ?)",
                        (task_text, difficulty, exp_reward)
                    )
                    added_count += 1
                else:
                    skipped_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å –∑–∞–¥–∞–Ω–∏–µ–º '{task_text}': {e}")
                skipped_count += 1
    
    conn.commit()
    conn.close()
    
    return added_count, skipped_count

def show_db_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('bot_db.sqlite')
    cursor = conn.cursor()
    
    cursor.execute("SELECT difficulty, COUNT(*) FROM tasks GROUP BY difficulty")
    stats = cursor.fetchall()
    
    print("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
    for difficulty, count in stats:
        level = "üü¢ –ü–∞—Ç—Ä—É–ª—å–Ω—ã–π" if difficulty == 'easy' else "üü° –î–µ—Ç–µ–∫—Ç–∏–≤" if difficulty == 'medium' else "üî¥ –°–ø–µ—Ü–Ω–∞–∑"
        print(f"{level}: {count} –∑–∞–¥–∞–Ω–∏–π")
    
    conn.close()

if __name__ == "__main__":
    print("üì¶ –ò–º–ø–æ—Ä—Ç –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π")
    print("=" * 50)
    
    print(f"üìù –í —Ñ–∞–π–ª–µ: {sum(len(tasks) for tasks in TASKS.values())} –∑–∞–¥–∞–Ω–∏–π")
    show_db_stats()
    
    confirm = input("\n‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è? (y/n): ").lower().strip()
    
    if confirm == 'y':
        added, skipped = import_tasks_to_db()
        print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {added} –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π")
        print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped} (—É–∂–µ –≤ –±–∞–∑–µ)")
        
        print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        show_db_stats()
    else:
        print("‚ùå –ò–º–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω")